{"ast":null,"code":"var _jsxFileName = \"/Users/jeongsejin/Desktop/dev/s3939906-s4002970-a2/React/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogIn({\n  isLogin,\n  toggleForm,\n  userListData,\n  userEmailLists,\n  logIn,\n  isValidEmail\n}) {\n  _s();\n  const [rememberMe, setRememberMe] = useState(false); // State to remember login\n  const navigate = useNavigate();\n\n  // Remember email & password if 'remember me' is checked after logout.\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('emailForRememberMe');\n    const storedPassword = localStorage.getItem('pwForRememberMe');\n    if (storedEmail && storedPassword) {\n      setRememberMe(true);\n      formik.setValues({\n        email: storedEmail,\n        password: storedPassword\n      });\n    }\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      password: Yup.string().min(8, 'Password must be at least 8 characters long').required('Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        setSubmitting(false);\n        handleLogin(values);\n      }, 400);\n    }\n  });\n  const handleLogin = values => {\n    var _userListData$find;\n    const {\n      email,\n      password\n    } = values;\n    const correctPassword = (_userListData$find = userListData.find(user => user.email === email)) === null || _userListData$find === void 0 ? void 0 : _userListData$find.password;\n    if (!userEmailLists.includes(email)) {\n      formik.setFieldError('email', 'User does not exist');\n    } else if (correctPassword !== password) {\n      formik.setFieldError('password', 'Incorrect password');\n    } else {\n      if (rememberMe) {\n        localStorage.setItem('emailForRememberMe', email);\n        localStorage.setItem('pwForRememberMe', password);\n      } else {\n        localStorage.removeItem('emailForRememberMe');\n        localStorage.removeItem('pwForRememberMe');\n      }\n      const user = userListData.find(user => user.email === email);\n      logIn({\n        name: user.name,\n        email: email,\n        password: password,\n        date: user.date,\n        preference: user.preference,\n        dietProfile: user.dietProfile,\n        dietPlan: user.dietPlan,\n        imgUrl: user.imgUrl\n      });\n      alert('Login successful');\n      navigate(`/soil/${email}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: `space-y-4 ${isLogin ? 'block' : 'hidden'}`,\n    id: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      className: `w-full h-10 px-3 bg-gray-200 rounded-md ${formik.touched.email && formik.errors.email && 'border-red-500'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), formik.touched.email && formik.errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formik.values.password,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      className: `w-full h-10 px-3 bg-gray-200 rounded-md ${formik.touched.password && formik.errors.password && 'border-red-500'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), formik.touched.password && formik.errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"remember\",\n        className: \"w-4 h-4\",\n        checked: rememberMe,\n        onChange: e => setRememberMe(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"remember\",\n        className: \"text-sm text-gray-600\",\n        children: \"remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"w-full py-2 text-white bg-green-600 rounded-md cursor-pointer\",\n      id: \"login_btn\",\n      value: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"w-full py-2 text-white bg-purple-600 rounded-md cursor-pointer\",\n      id: \"signup_btn\",\n      onClick: toggleForm,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(LogIn, \"E3K6Emy0gaN1qitJSlKpx8DsSCU=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useFormik","Yup","jsxDEV","_jsxDEV","LogIn","isLogin","toggleForm","userListData","userEmailLists","logIn","isValidEmail","_s","rememberMe","setRememberMe","navigate","storedEmail","localStorage","getItem","storedPassword","formik","setValues","email","password","initialValues","validationSchema","object","string","required","min","onSubmit","values","setSubmitting","setTimeout","handleLogin","_userListData$find","correctPassword","find","user","includes","setFieldError","setItem","removeItem","name","date","preference","dietProfile","dietPlan","imgUrl","alert","handleSubmit","className","id","children","type","placeholder","value","onChange","handleChange","onBlur","handleBlur","touched","errors","fileName","_jsxFileName","lineNumber","columnNumber","checked","e","target","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongsejin/Desktop/dev/s3939906-s4002970-a2/React/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function LogIn({\n  isLogin,\n  toggleForm,\n  userListData,\n  userEmailLists,\n  logIn,\n  isValidEmail,\n}) {\n  const [rememberMe, setRememberMe] = useState(false); // State to remember login\n  const navigate = useNavigate();\n\n  // Remember email & password if 'remember me' is checked after logout.\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('emailForRememberMe');\n    const storedPassword = localStorage.getItem('pwForRememberMe');\n    if (storedEmail && storedPassword) {\n      setRememberMe(true);\n      formik.setValues({ email: storedEmail, password: storedPassword });\n    }\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Email is required'),\n      password: Yup.string()\n        .min(8, 'Password must be at least 8 characters long')\n        .required('Password is required'),\n    }),\n    onSubmit: (values, { setSubmitting }) => {\n      setTimeout(() => {\n        setSubmitting(false);\n        handleLogin(values);\n      }, 400);\n    },\n  });\n\n  const handleLogin = (values) => {\n    const { email, password } = values;\n    const correctPassword = userListData.find(\n      (user) => user.email === email\n    )?.password;\n\n    if (!userEmailLists.includes(email)) {\n      formik.setFieldError('email', 'User does not exist');\n    } else if (correctPassword !== password) {\n      formik.setFieldError('password', 'Incorrect password');\n    } else {\n      if (rememberMe) {\n        localStorage.setItem('emailForRememberMe', email);\n        localStorage.setItem('pwForRememberMe', password);\n      } else {\n        localStorage.removeItem('emailForRememberMe');\n        localStorage.removeItem('pwForRememberMe');\n      }\n\n      const user = userListData.find((user) => user.email === email);\n      logIn({\n        name: user.name,\n        email: email,\n        password: password,\n        date: user.date,\n        preference: user.preference,\n        dietProfile: user.dietProfile,\n        dietPlan: user.dietPlan,\n        imgUrl: user.imgUrl,\n      });\n\n      alert('Login successful');\n      navigate(`/soil/${email}`);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={formik.handleSubmit}\n      className={`space-y-4 ${isLogin ? 'block' : 'hidden'}`}\n      id='login-form'\n    >\n      <input\n        type='email'\n        name='email'\n        placeholder='Email'\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        className={`w-full h-10 px-3 bg-gray-200 rounded-md ${\n          formik.touched.email && formik.errors.email && 'border-red-500'\n        }`}\n      />\n      {formik.touched.email && formik.errors.email && (\n        <p className='text-red-500'>{formik.errors.email}</p>\n      )}\n      <input\n        type='password'\n        name='password'\n        placeholder='Password'\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        className={`w-full h-10 px-3 bg-gray-200 rounded-md ${\n          formik.touched.password && formik.errors.password && 'border-red-500'\n        }`}\n      />\n      {formik.touched.password && formik.errors.password && (\n        <p className='text-red-500'>{formik.errors.password}</p>\n      )}\n      <div className='flex items-center gap-2'>\n        <input\n          type='checkbox'\n          id='remember'\n          className='w-4 h-4'\n          checked={rememberMe}\n          onChange={(e) => setRememberMe(e.target.checked)}\n        />\n        <label htmlFor='remember' className='text-sm text-gray-600'>\n          remember me\n        </label>\n      </div>\n      <input\n        type='submit'\n        className='w-full py-2 text-white bg-green-600 rounded-md cursor-pointer'\n        id='login_btn'\n        value='Login'\n      />\n      {/* Submit button */}\n      <button\n        type='button'\n        className='w-full py-2 text-white bg-purple-600 rounded-md cursor-pointer'\n        id='signup_btn'\n        onClick={toggleForm}\n      >\n        Sign Up\n      </button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}